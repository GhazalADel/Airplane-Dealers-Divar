basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ExpertRequestResponse:
    properties:
      adID:
        type: integer
      createdAt:
        type: string
      expertID:
        type: integer
      id:
        type: integer
      status:
        type: string
      userID:
        type: integer
    type: object
  models.GetExpertRequestResponse:
    properties:
      adSubject:
        type: string
      createdAt:
        type: string
      expertID:
        type: integer
      id:
        type: integer
      status:
        type: string
      userName:
        type: integer
    type: object
  models.GetRepairRequestResponse:
    properties:
      adSubject:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      status:
        type: string
      userName:
        type: integer
    type: object
  models.SuccessResponse:
    properties:
      success:
        type: boolean
    type: object
  models.UpdateExpertCheckRequest:
    properties:
      report:
        type: string
      status:
        $ref: '#/definitions/utils.Status'
    type: object
  utils.Status:
    enum:
    - Wait for payment status
    - Pending for expert
    - Pending for matin
    - In progress
    - Done
    type: string
    x-enum-varnames:
    - WAIT_FOR_PAYMENT_STATUS
    - EXPERT_PENDING_STATUS
    - MATIN_PENDING_STATUS
    - IN_PROGRESS_STATUS
    - DONE_STATUS
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Quera Airplane-Divar server
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Airplane-Divar
  version: "1.0"
paths:
  /expert/ads/{adID}:
    delete:
      description: delete expert check request for expert or user
      parameters:
      - description: ad ID
        in: path
        name: adID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: delete expert check request for expert or user
      tags:
      - expert
    get:
      description: retrieve expert check request for expert or user
      parameters:
      - description: ad ID
        in: path
        name: adID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetExpertRequestResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: retrieve expert check request for expert or user
      tags:
      - expert
  /expert/ads/{adID}/check-request:
    post:
      consumes:
      - application/json
      description: Request to expert check
      parameters:
      - description: Ad ID
        in: path
        name: adID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Request to expert check
      tags:
      - expert
  /expert/check-request/{expertRequestID}:
    put:
      consumes:
      - application/json
      description: Update expert check request
      parameters:
      - description: expert request ID
        in: path
        name: expertRequestID
        required: true
        type: integer
      - description: Expert check object
        in: body
        name: expertCheckRequest
        required: true
        schema:
          $ref: '#/definitions/models.UpdateExpertCheckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExpertRequestResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update expert check request
      tags:
      - expert
  /expert/check-requests:
    get:
      description: ListExpertRequest retrieves all expert requests for an expert
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: integer
      - description: Ad ID
        in: query
        name: ads_id
        type: integer
      - description: From date
        in: query
        name: from_date
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ExpertRequestResponse'
            type: array
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: ListExpertRequest retrieves all expert requests for an expert
      tags:
      - expert
  /repair/ads/{adID}:
    get:
      description: retrieve repair check request for repair or user
      parameters:
      - description: ad ID
        in: path
        name: adID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetRepairRequestResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: retrieve repair check request for repair or user
      tags:
      - repair
  /repair/ads/{adID}/check-request:
    post:
      consumes:
      - application/json
      description: Request to repair check
      parameters:
      - description: Ad ID
        in: path
        name: adID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Request to repair check
      tags:
      - repair
swagger: "2.0"
